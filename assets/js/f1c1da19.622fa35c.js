"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[253],{2076:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return u},default:function(){return d}});var n=t(7462),r=t(3366),s=(t(7294),t(3905)),i=["components"],p={id:"escape",title:"escape",sidebar_label:"escape",hide_title:!0},c="escape",o={unversionedId:"api/escape",id:"api/escape",isDocsHomePage:!1,title:"escape",description:"A function that [escapes] a string for use in a [regular expression].",source:"@site/../docs/api/escape.mdx",sourceDirName:"api",slug:"/api/escape",permalink:"/regexp/api/escape",editUrl:"https://github.com/snout-router/regexp/edit/main/website/../docs/api/escape.mdx",version:"current",frontMatter:{id:"escape",title:"escape",sidebar_label:"escape",hide_title:!0},sidebar:"docs"},u=[{value:"Parameters",id:"parameters",children:[]},{value:"Return value",id:"return-value",children:[]},{value:"Usage",id:"usage",children:[]}],l={toc:u};function d(e){var a=e.components,t=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},l,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"escape"},(0,s.kt)("inlineCode",{parentName:"h1"},"escape")),(0,s.kt)("p",null,"A function that ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping"},"escapes")," a string for use in a ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"},"regular expression"),"."),(0,s.kt)("p",null,"The returned string is suitable for use when building dynamic regular\nexpressions that should match the original string exactly."),(0,s.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The escaped string is suitable ",(0,s.kt)("em",{parentName:"p"},"only")," for use in matching literal strings. In\nother words, it is ",(0,s.kt)("em",{parentName:"p"},"not")," suitable for escaping characters inside regular\nexpression character classes."))),(0,s.kt)("h2",{id:"parameters"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"escape")," accepts a single string parameter."),(0,s.kt)("h2",{id:"return-value"},"Return value"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"escape")," will return an escaped version of the original string."),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import {escape} from '@snout/regexp'\n\nconst happyFace = new RegExp(escape('^_^'))\n\nhappyFace.test('^_^') // returns true\nhappyFace.test('-_-') // returns false\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"import {escape} from '@snout/regexp'\n\nfunction trimSuffix(suffix: string, value: string) {\n  return value.replace(new RegExp(`${escape(suffix)}$`, ''))\n}\n\ntrimSuffix('()', 'functionName()') // returns 'functionName'\n")))}d.isMDXComponent=!0}}]);